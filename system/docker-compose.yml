version: '2.1'

services:

  traefik:
    image: traefik:1.7.6-alpine
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    command: -c /dev/null --api --docker --docker.exposedbydefault=false --logLevel=INFO
    networks:
    - ingress
    ports:
    # HTTP port mapping for the outside world
    - ${HTTP_PORT_MAPPING}
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    labels:
      system: true
      # Expose Traefik dashboard at /_/traefik/ (any domain)
      traefik.enable: true
      traefik.backend: traefik-dashboard
      traefik.frontend.rule: PathPrefixStrip:/_/traefik/
      # Ensure this rule takes precedence over any other rule by setting a high priority number
      traefik.frontend.priority: 1000
      # Internal dashboard port
      traefik.port: 8080
      traefik.frontend.auth.basic.users: ${ADMIN_BASIC_AUTH}
    logging:
      driver: json-file
      options:
        # Limit log size
        max-size: "200k"
        max-file: "10"

  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    command: --no-auth -H unix:///var/run/docker.sock
    networks:
      - ingress
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      system: true
      # Expose Portainer dashboard at /_/portainer/ (any domain)
      traefik.enable: true
      traefik.backend: portainer
      traefik.docker.network: ingress
      traefik.frontend.rule: PathPrefixStrip:/_/portainer/
      # Ensure this rule takes precedence over any other rule by setting a high priority number
      traefik.frontend.priority: 1000
      traefik.port: 9000
      traefik.frontend.auth.basic.users: ${ADMIN_BASIC_AUTH}
    logging:
      driver: json-file
      options:
        # Limit log size
        max-size: "200k"
        max-file: "10"

networks:
  ingress:
    name: ${PROJECT_NETWORK_NAME}
